using System.ComponentModel.Composition;
using System.Reflection;
using XrmToolBox.Extensibility;
using XrmToolBox.Extensibility.Interfaces;

[assembly: AssemblyCompany("Remy van Duijkeren")]
[assembly: AssemblyVersion("0.1.0.0")]

namespace DataverseStorageCleaner;

// To generate a Base64 string for the images below, use https://www.base64-image.de/. Small = 32x32, Big = 80x80
[Export(typeof(IXrmToolBoxPlugin)),
 ExportMetadata("Name", "Dataverse Storage Cleaner"),
 ExportMetadata("Description", "Analyze and clean up Dataverse storage by removing old system jobs, logs, emails, and attachments."),
 ExportMetadata("SmallImageBase64", "iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAdiAAAHYgE4epnbAAAEy2lUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSfvu78nIGlkPSdXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQnPz4KPHg6eG1wbWV0YSB4bWxuczp4PSdhZG9iZTpuczptZXRhLyc+CjxyZGY6UkRGIHhtbG5zOnJkZj0naHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyc+CgogPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9JycKICB4bWxuczpBdHRyaWI9J2h0dHA6Ly9ucy5hdHRyaWJ1dGlvbi5jb20vYWRzLzEuMC8nPgogIDxBdHRyaWI6QWRzPgogICA8cmRmOlNlcT4KICAgIDxyZGY6bGkgcmRmOnBhcnNlVHlwZT0nUmVzb3VyY2UnPgogICAgIDxBdHRyaWI6Q3JlYXRlZD4yMDI1LTA5LTIxPC9BdHRyaWI6Q3JlYXRlZD4KICAgICA8QXR0cmliOkV4dElkPjgzNjhkMzQ0LWE5YWEtNGU3My05MzJmLWI2YWJhYzFkODg2YjwvQXR0cmliOkV4dElkPgogICAgIDxBdHRyaWI6RmJJZD41MjUyNjU5MTQxNzk1ODA8L0F0dHJpYjpGYklkPgogICAgIDxBdHRyaWI6VG91Y2hUeXBlPjI8L0F0dHJpYjpUb3VjaFR5cGU+CiAgICA8L3JkZjpsaT4KICAgPC9yZGY6U2VxPgogIDwvQXR0cmliOkFkcz4KIDwvcmRmOkRlc2NyaXB0aW9uPgoKIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PScnCiAgeG1sbnM6ZGM9J2h0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvJz4KICA8ZGM6dGl0bGU+CiAgIDxyZGY6QWx0PgogICAgPHJkZjpsaSB4bWw6bGFuZz0neC1kZWZhdWx0Jz5EYXRhdmVyc2UgU3RvcmFnZSBDbGVhbmVyIC0gMTwvcmRmOmxpPgogICA8L3JkZjpBbHQ+CiAgPC9kYzp0aXRsZT4KIDwvcmRmOkRlc2NyaXB0aW9uPgoKIDxyZGY6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"),
 ExportMetadata("BigImageBase64", "iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAEy2lUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSfvu78nIGlkPSdXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQnPz4KPHg6eG1wbWV0YSB4bWxuczp4PSdhZG9iZTpuczptZXRhLyc+CjxyZGY6UkRGIHhtbG5zOnJkZj0naHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyc+CgogPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9JycKICB4bWxuczpBdHRyaWI9J2h0dHA6Ly9ucy5hdHRyaWJ1dGlvbi5jb20vYWRzLzEuMC8nPgogIDxBdHRyaWI6QWRzPgogICA8cmRmOlNlcT4KICAgIDxyZGY6bGkgcmRmOnBhcnNlVHlwZT0nUmVzb3VyY2UnPgogICAgIDxBdHRyaWI6Q3JlYXRlZD4yMDI1LTA5LTIxPC9BdHRyaWI6Q3JlYXRlZD4KICAgICA8QXR0cmliOkV4dElkPjkzYTU4Mjk1LThkODAtNDQ5Zi1hZjliLWI4MzhkZTNiNjI0MjwvQXR0cmliOkV4dElkPgogICAgIDxBdHRyaWI6RmJJZD41MjUyNjU5MTQxNzk1ODA8L0F0dHJpYjpGYklkPgogICAgIDxBdHRyaWI6VG91Y2hUeXBlPjI8L0F0dHJpYjpUb3VjaFR5cGU+CiAgICA8L3JkZjpsaT4KICAgPC9yZGY6U2VxPgogIDwvQXR0cmliOkFkcz4KIDwvcmRmOkRlc2NyaXB0aW9uPgoKIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PScnCiAgeG1sbnM6ZGM9J2h0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvJz4KICA8ZGM6dGl0bGU+CiAgIDxyZGY6QWx0PgogICAgPHJkZjpsaSB4bWw6bGFuZz0neC1kZWZhdWx0Jz5EYXRhdmVyc2UgU3RvcmFnZSBDbGVhbmVyIC0gMTwvcmRmOmxpPgogICA8L3JkZjpBbHQ+CiAgPC9kYzp0aXRsZT4KIDwvcmRmOkRlc2NyaXB0aW9uPgoKIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PScnCiAgeG1sbnM6cGRmPSdodHRwOi8vbnMuYWRvYmUuY29tL3BkZi8xLjMvJz4KICA8cGRmOkF1dGhvcj5SZW15IHZhbiBEdWlqa2VyZW48L3BkZjpBdXRob3I+CiA8L3JkZjpEZXNjcmlwdGlvbj4KCiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0nJwogIHhtbG5zOnhtcD0naHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyc+CiAgPHhtcDpDcmVhdG9yVG9vbD5DYW52YSAoUmVuZGVyZXIpIGRvYz1EQUd6bEowREYzdyB1c2VyPVVBRk1LdTNrSnpFIGJyYW5kPUJBRk1LcG4tVmowIHRlbXBsYXRlPTwveG1wOkNyZWF0b3JUb29sPgogPC9yZGY6RGVzY3JpcHRpb24+CjwvcmRmOlJERj4KPC94OnhtcG1ldGE+Cjw/eHBhY2tldCBlbmQ9J3InPz6IqP02AAAKNklEQVR4nO2ceZAUVx3Hvz09187OuffFAsuZdSFugHATCJAKcqxCAiEpNZAKaKJFCFJKKqJlSitgWTGBHJUYhYIYCyhMoa4oWURSRVajoLKhJEUIbJa92Jmd++zDP3pn+vVcuzO9MzuJ/fmrp/v1vNff/v1+7/dev25qztylPBSyRjWaf6bTcNCo/7/uh1ruH2jVPLasGcSaRW6UWVgAQFe/GsfarDh+1iK7gYUOJceF9VoOB3Z1o6khlPT4mb8bsfeNyqwb91lAlgs/+YBdIt5HnVrc6NHEfq+824v1S11yqih4snbhIh2HdYs8sd9Pv1iN9zsMAICHVjixY5MdALBhmQsnz31+XTlrC5xQHYZWI3j/xav6mHgA8Jt3rbC7aABAQ00EOg0ns5mFS9YC6rVi6BxwJhpyn0PcZy5WBFRIgSKgTBQBZaIIKBNFQJkoAspEEVAmioAyUQSUiSKgTBQBZaIIKBNFQJkoAspEEVAmioAyUQSUiSKgTBQBZaIIKBNFQJkoAspEEVAmioAyUQSUiSKgTBQBZSJ7gWUuWD7bi/vneTChOgKaHuMVrzww4FKjvaMIx9os8AZoyeGCEpCiePzo8T6smOMb66ZIqC5jMGNSEGsWevCN/bXoHxRlKygXXrfIU3DikVSXMdj9yG3JvoKywBVzvLHt42fNOPEXCyIRagxbJNA4MYQfPNYHjRqYP8MPNc2DYYV2ZSzglLoQFt7pR115JLZvUm0Yj611SMqVW5nY9uaVTgx6aJz5wIheuwapsJnZ2PbhVhvsrsK4vz12DTYsc6F5ahC0Slid6/ELsTDjFh7Y1Q2LUbpgclJdGJPqwinP2XyfsE560Z1+bN9Xm7Jcn0ONSbXC/zywzIVf/r4EEWbsLfCuaQHcMV5YC85xQCAkRr6MBNRruQTxMqGWsNpktF4wYcEMPwDg0dVOPLramXVdueKvl4pj7gvIiIEON43DrVbotOnTDH9Qhe88PAAAGC4hafuHEQtm+PGlBZ5hSo4Nt26rsf9ouWRf1gL6Aioca7OOqGxUwJE443O/qsD7HQbs3SoEbQDgxigVpCixze+cN+Pg8VL4gtLEpTCidBzvfmDEthYHxlUKLr/nlSqc/1dx3tvRduA6DHrh7r31J0uCeMAIBGycEMTCmX6U2xjJe3DlVgYv7OjOqEHFRRye3dIPhgG6BzQ4d7EYnX3apGU/6dHEBKyvCgPIr4AlZiYmHiC0NxkpBbSZWDy3rRezpgeTHtfreMxrCmTUKL2Wx2oivn1zvQOn2414/kg5QmHp3SUb3Dw1iKOnM6pKNvO+IF6bx68CxyUPQElHIqUWBq9/ryuleKPJ/fO8eGFHD7Rxb3kOusUx59xGP0rMTPypOWX1Qndsm3znJZ6kR3ZstKOuQmiw26fCoT/YcLVTBwCgVTzKrAxUGaZnDEdhYJAGPxSW5zb6sfk+JzRqwcI2rXDiyGlbrLyDEJCmgU0rXHj1ZGlmlWbJtPoQ7pomGg/ZlngSBDQWsbh3ljCkCjMUtu+rxY2e5HFKDhevFqHjuh77v9ULAGhZ4k4pICAk1ifOWnA7yVtRo823H7RLfg+mETDBhSePC4MeKt9+2ZAT8aK89+9i3LotCFJbzsBcLA7lHG6pUAY9jz1flw7kc8H6pS7Mmi6N7eksMEFAg06MRYOe1CeOFuTY2GokBUyse36TH0+styfsHy1mTQtg56aBhP2D3gwElDCGw1BSQHI8/NVVTmxcPvpDvCnjQnj+yV6ohwyfJUas0TdPk1FQ84EkDEvB7Ys2j0frBVPs2M6H7Hi8xQEVNTpDlAUzfDi4qxvGIkG1T/s0OH9JzDsdaWaFEo6QyXLLYjdaFrvji+QNh5uGuZiDRg0cPFEKYxGLJc3CZMPWNYO4u9GPHx+qyDpOmwwsntjgwJeXiNfYa1fjqZ9XY9fDoitnFANtJjZZubwQXzfZcJOBxTOvVeGd86IlNjWEcPSHn2Lv1j40Thx5zlphY7CtxYETP+mUiPffmzps31eL7gENSom8M6M0hvR9lgXYFBn4aEHTPOih2xjvkGTDS8wsOvu02HekApc/LsJTmwZgMnCgVcCq+V6smu/FtS4t2jsMuNqpw/VbWgRC1FAdwhv2k+vC+OKUAObcEYCKMB2OA461WfDqyVKEh+ItObmbrjNNzAMNooIvnyzF238e2YxLtux+5DbWLxWsIH6ukUxlSogLar1gwt8+FEQkn6FMrhNEyoSrnVrsP1qOK5/oJfuj9Tm9qrRGlCCghcjFXN7c9zEun3h3yTQGSLRAErtLje+/XoXDrSF85R43ls/2jniyNxSm0P6hAafeM+HC5cRJCnMxCzWd2IZkJAhIXoQrTf4zWjg94k2yxsVAcgRQYkkem6916fDTt8rxs1+XYfr4EGZOCaKhJoza8gisRg5qmofLp0LPgAY3ezXouK7Hf67pEQynNg7yZsUn9PEkWiBxF515EJC8SWaD1ILshIDDdW4cT+HKDT2u3NCnLTcSpAKm1yDhNuTbAsk6LGlcuDSPszElI+yBgSQCWoz5joFiHekEjI+BuYSsK91EApBUQMGNWBaxZ5+5hAwT1hH2wrlGlgtHe2Gyd8wl6Vw4wlDw+oUmlqboRHJB1gKaDGxsKivefesrw1g40wdaJU13mxqCaJ4qnf6hKB7zmvxoqJHmZHoth3uafSgjVi34gypEhn7GC0hegFbDw6DPzxeQsu6FyR6YtECLkcXhvV3Qa3m8+TsbfnGqBAAwa3oAB3cJD5b2vFKJc5eMAITZ4x0b7WBY4MFn6tHrEKasnt3Sj+WzfbC7aKzbPR4cLySoLi+NMisLq5EDRfHgeTFxdXho1FdFYhfmT/JkbLTJ2gItKXrg+spI7FtZU8eJn7ubXCtuT6wVrW3K0GhATQMTa6RraADBHcm0hIyDprhUxuEiO5L89MRZ98JkCuMkXJh8sM0R1sEQQxzyqZW0vLhNLokgh0dkuMhkNJIrovW4fSpJm5OR0gKdeZiNjiLtSOKT6fz2xCYDG1sRMZz1AQkWKDbenadeGJC6cHxHQs4G15Tl3oXJOpJ91i8eiYDRGVkgP0l0rC5fagE/7hInS1fO8UKnzW1PvJaYQL7WNfxErURiMk2gaaC6VOgAyogcTKflYvvJmRuTgY3tN+jE/ykxi/vVxILxyhIGRdFyRJyMT6av3NDjZq8G46siqChh8OLOHrx5yoau/tQLNbNBo+axdpEHG5aKAv6x3ZTmDAHJV3z3fK0f6xaP7dKyw61WvPZb6QP05qkBvPR0d2yKKR+8fcaCl46VDVtO4qeqAnjEFP0uK8mlj4rw3ZeriYdMueXoaeuIxAPiLHD6+BBaFruhSXIRRToOei2HQY80sJoMLCgqsdOxmViEIpQk8VVRPGwmFt4AjVCSxeOBIIVDadZGmwwsVi/woKacEcLEKD5tCEcoONw0zv6zGNdv6UZ8nqwPcSsU8HPhzwqKgDJRBJTJ/wAjLKuRqWEWUAAAAABJRU5ErkJggg=="),
 ExportMetadata("BackgroundColor", "#353740"), // Lavender black #353740, yellow #fcd21d, light-gray #f7f7f7
 ExportMetadata("PrimaryFontColor", "#fff"), // Black
 ExportMetadata("SecondaryFontColor", "#f7f7f7")] // Gray
public class DataverseStorageCleanerPlugin : PluginBase
{
    public override IXrmToolBoxPluginControl GetControl() => new MainControl();

    public DataverseStorageCleanerPlugin()
    {
        // If you have external assemblies that you need to load, uncomment the following to
        // hook into the event that will fire when an Assembly fails to resolve
        // AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(AssemblyResolveEventHandler);
    }

    /// <summary>
    /// Event fired by CLR when an assembly reference fails to load
    /// Assumes that related assemblies will be loaded from a subfolder named the same as the Plugin
    /// For example, a folder named Sample.XrmToolBox.MyPlugin
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="args"></param>
    /// <returns></returns>
    private Assembly AssemblyResolveEventHandler(object sender, ResolveEventArgs args)
    {
        Assembly loadAssembly = null;
        Assembly currAssembly = Assembly.GetExecutingAssembly();

        // base name of the assembly that failed to resolve
        var argName = args.Name.Substring(0, args.Name.IndexOf(","));

        // check to see if the failing assembly is one that we reference.
        List<AssemblyName> refAssemblies = currAssembly.GetReferencedAssemblies().ToList();
        var refAssembly = refAssemblies.Where(a => a.Name == argName).FirstOrDefault();

        // if the current unresolved assembly is referenced by our plugin, attempt to load
        if (refAssembly != null)
        {
            // load from the path to this plugin assembly, not host executable
            string dir = Path.GetDirectoryName(currAssembly.Location).ToLower();
            string folder = Path.GetFileNameWithoutExtension(currAssembly.Location);
            dir = Path.Combine(dir, folder);

            var assmbPath = Path.Combine(dir, $"{argName}.dll");

            if (File.Exists(assmbPath))
            {
                loadAssembly = Assembly.LoadFrom(assmbPath);
            }
            else
            {
                throw new FileNotFoundException($"Unable to locate dependency: {assmbPath}");
            }
        }

        return loadAssembly;
    }
}
